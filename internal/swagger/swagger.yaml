basePath: /api
definitions:
  handler.Response:
    properties:
      code:
        description: Code 状态码，非0时表示自定义HTTP业务状态码
        type: integer
      data:
        description: Data 响应数据，具体内容因接口而异
      msg:
        description: Msg 返回信息，通常是状态描述
        type: string
    type: object
  model.CommentSetting:
    properties:
      comment_api:
        description: 评论 API 地址
        type: string
      enable_comment:
        description: 是否启用评论
        type: boolean
      provider:
        description: 评论提供者
        type: string
    type: object
  model.CommentSettingDto:
    properties:
      comment_api:
        description: 评论 API 地址
        type: string
      enable_comment:
        description: 是否启用评论
        type: boolean
      provider:
        description: 评论提供者
        type: string
    type: object
  model.Connected:
    properties:
      connect_url:
        description: 连接地址
        type: string
      id:
        type: integer
    type: object
  model.Echo:
    properties:
      content:
        type: string
      created_at:
        type: string
      extension:
        type: string
      extension_type:
        type: string
      fav_count:
        type: integer
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/model.Image'
        type: array
      private:
        type: boolean
      tags:
        items:
          $ref: '#/definitions/model.Tag'
        type: array
      user_id:
        type: integer
      username:
        type: string
    type: object
  model.GetPresignURLDto:
    properties:
      content_type:
        description: 文件的 MIME 类型
        type: string
      file_name:
        description: 原始文件名
        type: string
    required:
    - file_name
    type: object
  model.Image:
    properties:
      id:
        type: integer
      image_source:
        description: '图片来源: local/url/s3/r2'
        type: string
      image_url:
        description: 图片URL
        type: string
      message_id:
        description: '关联的Echo ID(注意⚠️: 该字段名为MessageID, 但实际关联的是Echo表,因为为了兼容旧版Echo用户)'
        type: integer
      object_key:
        description: 对象存储的Key (如果是本地存储则为空)
        type: string
    type: object
  model.ImageDto:
    properties:
      object_key:
        description: 对象存储的 Key, 用于删除 S3/R2 上的图片
        type: string
      source:
        type: string
      url:
        description: 图片的 URL 地址
        type: string
    required:
    - source
    - url
    type: object
  model.LoginDto:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.OAuth2Setting:
    properties:
      auth_url:
        description: OAuth2 授权 URL
        type: string
      client_id:
        description: OAuth2 Client ID
        type: string
      client_secret:
        description: OAuth2 Client Secret
        type: string
      enable:
        description: 是否启用 OAuth2 登录
        type: boolean
      provider:
        description: OAuth2 提供商
        type: string
      redirect_uri:
        description: OAuth2 重定向 URI
        type: string
      scopes:
        description: OAuth2 请求的权限范围
        items:
          type: string
        type: array
      token_url:
        description: OAuth2 令牌 URL
        type: string
      user_info_url:
        description: OAuth2 用户信息 URL
        type: string
    type: object
  model.OAuth2SettingDto:
    properties:
      auth_url:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      enable:
        type: boolean
      provider:
        type: string
      redirect_uri:
        type: string
      scopes:
        items:
          type: string
        type: array
      token_url:
        type: string
      user_info_url:
        type: string
    type: object
  model.PageQueryDto:
    properties:
      page:
        description: 页码，从1开始
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      search:
        description: 用于搜索的关键字
        type: string
    type: object
  model.RegisterDto:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.S3Setting:
    properties:
      access_key:
        description: 访问密钥 ID
        type: string
      bucket_name:
        description: 存储桶名称
        type: string
      cdn_url:
        description: CDN 加速域名（可选，没有就走 Endpoint）
        type: string
      enable:
        description: 是否启用 S3 存储
        type: boolean
      endpoint:
        description: S3 端点
        type: string
      path_prefix:
        description: 存储路径前缀，例如 "uploads/"，方便隔离目录
        type: string
      provider:
        description: S3 服务提供商，例如 "aws", "aliyun", "minio", "other"
        type: string
      public_read:
        description: 上传时是否默认设置对象为 public-read
        type: boolean
      region:
        description: 区域
        type: string
      secret_key:
        description: 秘密访问密钥
        type: string
      use_ssl:
        description: 是否使用 SSL
        type: boolean
    type: object
  model.S3SettingDto:
    properties:
      access_key:
        description: 访问密钥 ID
        type: string
      bucket_name:
        description: 存储桶名称
        type: string
      cdn_url:
        description: CDN 加速域名（可选，没有就走 Endpoint）
        type: string
      enable:
        description: 是否启用 S3 存储
        type: boolean
      endpoint:
        description: S3 端点
        type: string
      path_prefix:
        description: 存储路径前缀，例如 "uploads/"，方便隔离目录
        type: string
      provider:
        description: S3 服务提供商，例如 "aws", "aliyun", "minio", "other"
        type: string
      public_read:
        description: 上传时是否默认设置对象为 public-read
        type: boolean
      region:
        description: 区域
        type: string
      secret_key:
        description: 秘密访问密钥
        type: string
      use_ssl:
        description: 是否使用 SSL
        type: boolean
    type: object
  model.SystemSetting:
    properties:
      ICP_number:
        description: 备案号
        type: string
      allow_register:
        description: 是否允许注册'
        type: boolean
      custom_css:
        description: 自定义 CSS
        type: string
      custom_js:
        description: 自定义 JS
        type: string
      meting_api:
        description: Meting API 地址
        type: string
      server_name:
        description: 服务器名称
        type: string
      server_url:
        description: 服务器地址
        type: string
      site_title:
        description: 站点标题
        type: string
    type: object
  model.SystemSettingDto:
    properties:
      ICP_number:
        description: 备案号
        type: string
      allow_register:
        description: 是否允许注册
        type: boolean
      comment_api:
        description: 评论 API 地址
        type: string
      custom_css:
        description: 自定义 CSS
        type: string
      custom_js:
        description: 自定义 JS
        type: string
      meting_api:
        description: Meting API 地址
        type: string
      server_name:
        description: 服务器名称
        type: string
      server_url:
        description: 服务器地址
        type: string
      site_title:
        description: 站点标题
        type: string
    type: object
  model.Tag:
    properties:
      created_at:
        description: 创建时间
        type: string
      id:
        type: integer
      name:
        description: 标签名称
        type: string
      usage_count:
        description: 使用计数
        type: integer
    type: object
  model.Todo:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      status:
        description: 0:未完成 1:已完成
        type: integer
      user_id:
        type: integer
      username:
        type: string
    type: object
  model.UserInfoDto:
    properties:
      avatar:
        description: |-
          头像地址
          example: https://example.com/avatar.png
        type: string
      is_admin:
        description: |-
          是否为管理员
          example: false
        type: boolean
      password:
        description: |-
          密码
          example: 123456
        type: string
      username:
        description: |-
          用户名
          example: linsnow
        type: string
    type: object
  model.Webhook:
    properties:
      created_at:
        description: 创建时间
        type: string
      id:
        description: Webhook ID
        type: integer
      is_active:
        description: 启用/禁用状态
        type: boolean
      last_status:
        description: 最近调用状态（如 success, failed）
        type: string
      last_trigger:
        description: 最近触发时间
        type: string
      name:
        description: Webhook 名称
        type: string
      secret:
        description: 签名密钥，用于请求验证（HMAC等）
        type: string
      updated_at:
        description: 更新时间
        type: string
      url:
        description: Webhook URL
        type: string
    type: object
  model.WebhookDto:
    properties:
      is_active:
        description: 启用/禁用状态
        type: boolean
      name:
        description: Webhook 名称
        type: string
      secret:
        description: 签名密钥，用于请求验证（HMAC等）
        type: string
      url:
        description: Webhook URL
        type: string
    type: object
host: localhost:6277
info:
  contact: {}
  description: 开源、自托管轻量级发布平台 Ech0 的 API 文档
  title: Ech0 API 文档
  version: "1.0"
paths:
  /addConnect:
    post:
      consumes:
      - application/json
      description: 用户添加一个新的连接
      parameters:
      - description: 连接信息
        in: body
        name: connected
        required: true
        schema:
          $ref: '#/definitions/model.Connected'
      produces:
      - application/json
      responses:
        "200":
          description: 添加连接失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 添加连接
      tags:
      - 连接管理
  /allusers:
    get:
      consumes:
      - application/json
      description: 获取系统中所有用户的详细信息，接口需要认证
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败，code=0，msg错误描述
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取所有用户
      tags:
      - 用户管理
  /audios/delete:
    delete:
      consumes:
      - application/json
      description: 用户删除已上传的音频文件
      produces:
      - application/json
      responses:
        "200":
          description: 删除失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 删除音频
      tags:
      - 通用功能
  /audios/upload:
    post:
      consumes:
      - multipart/form-data
      description: 用户上传音频文件，成功后返回音频的访问 URL
      parameters:
      - description: 音频文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 上传音频
      tags:
      - 通用功能
  /backup:
    get:
      consumes:
      - application/json
      description: 用户触发数据备份操作，成功后返回备份成功信息
      produces:
      - application/json
      responses:
        "200":
          description: 备份失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 执行数据备份
      tags:
      - 系统备份
  /backup/export:
    get:
      consumes:
      - application/json
      description: 用户导出备份文件，成功后触发文件下载
      produces:
      - application/octet-stream
      responses:
        "200":
          description: 导出备份失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 导出数据备份
      tags:
      - 系统备份
  /backup/import:
    post:
      consumes:
      - multipart/form-data
      description: 用户上传备份文件，成功后恢复数据
      parameters:
      - description: 备份文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 导入备份失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 恢复数据备份
      tags:
      - 系统备份
  /comment/settings:
    get:
      consumes:
      - application/json
      description: 获取系统的评论相关设置
      produces:
      - application/json
      responses:
        "200":
          description: 获取评论设置失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取评论设置
      tags:
      - 系统设置
    put:
      consumes:
      - application/json
      description: 更新系统的评论相关设置
      parameters:
      - description: 新的评论设置
        in: body
        name: commentSettings
        required: true
        schema:
          $ref: '#/definitions/model.CommentSettingDto'
      produces:
      - application/json
      responses:
        "200":
          description: 更新评论设置失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 更新评论设置
      tags:
      - 系统设置
  /connect:
    get:
      consumes:
      - application/json
      description: 获取当前实例的连接详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取连接信息失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取当前实例的连接信息
      tags:
      - 连接管理
  /connect/list:
    get:
      consumes:
      - application/json
      description: 获取当前实例添加的所有连接列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取连接列表失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取所有连接
      tags:
      - 连接管理
  /connects/info:
    get:
      consumes:
      - application/json
      description: 获取当前用户所有已添加的连接的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取连接信息失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取所有添加的连接信息
      tags:
      - 连接管理
  /delConnect/{id}:
    delete:
      consumes:
      - application/json
      description: 用户根据ID删除一个已添加的连接
      parameters:
      - description: 连接ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除连接失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 删除连接
      tags:
      - 连接管理
  /echo:
    post:
      consumes:
      - application/json
      description: 用户创建一条新的Echo动态
      parameters:
      - description: Echo内容
        in: body
        name: echo
        required: true
        schema:
          $ref: '#/definitions/model.Echo'
      produces:
      - application/json
      responses:
        "200":
          description: 创建失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 创建新的Echo
      tags:
      - Echo
    put:
      consumes:
      - application/json
      description: 更新指定的Echo动态内容
      parameters:
      - description: 要更新的Echo内容
        in: body
        name: echo
        required: true
        schema:
          $ref: '#/definitions/model.Echo'
      produces:
      - application/json
      responses:
        "200":
          description: 更新失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 更新Echo
      tags:
      - Echo
  /echo/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除指定的Echo动态
      parameters:
      - description: Echo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 删除Echo
      tags:
      - Echo
    get:
      consumes:
      - application/json
      description: 根据ID获取指定的Echo动态详情
      parameters:
      - description: Echo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取指定ID的Echo
      tags:
      - Echo
  /echo/like/{id}:
    put:
      consumes:
      - application/json
      description: 根据ID为指定的Echo动态点赞
      parameters:
      - description: Echo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 点赞失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 点赞Echo
      tags:
      - Echo
  /echo/page:
    get:
      consumes:
      - application/json
      description: 获取Echo列表，支持分页，兼容 GET Query 和 POST JSON 请求
      parameters:
      - description: 页码（GET方式）
        in: query
        name: page
        type: integer
      - description: 每页数量（GET方式）
        in: query
        name: pageSize
        type: integer
      - description: 分页参数（POST方式）
        in: body
        name: body
        schema:
          $ref: '#/definitions/model.PageQueryDto'
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取Echo列表（分页）
      tags:
      - Echo
    post:
      consumes:
      - application/json
      description: 获取Echo列表，支持分页，兼容 GET Query 和 POST JSON 请求
      parameters:
      - description: 页码（GET方式）
        in: query
        name: page
        type: integer
      - description: 每页数量（GET方式）
        in: query
        name: pageSize
        type: integer
      - description: 分页参数（POST方式）
        in: body
        name: body
        schema:
          $ref: '#/definitions/model.PageQueryDto'
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取Echo列表（分页）
      tags:
      - Echo
  /echo/tag/{tagid}:
    get:
      consumes:
      - application/json
      description: 根据标签 ID 获取包含该标签的 Echo 列表，支持 query 分页与搜索
      parameters:
      - description: 标签 ID
        in: path
        name: tagid
        required: true
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: pageSize
        type: integer
      - description: 搜索关键字
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取指定标签 ID 的 Echo 列表
      tags:
      - Echo
  /echo/today:
    get:
      consumes:
      - application/json
      description: 获取当前用户今天发布的所有Echo动态
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取今天的Echo列表
      tags:
      - Echo
  /getmusic:
    get:
      consumes:
      - application/json
      description: 获取当前可供播放的音乐文件URL
      produces:
      - application/json
      responses:
        "200":
          description: 获取音乐URL失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取可播放的音乐
      tags:
      - 通用功能
  /heatmap:
    get:
      consumes:
      - application/json
      description: 获取系统活动热力图数据，用于展示用户活动分布情况
      produces:
      - application/json
      responses:
        "200":
          description: 获取热力图数据失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取热力图数据
      tags:
      - 通用功能
  /hello:
    get:
      consumes:
      - application/json
      description: 获取 Ech0 系统欢迎信息、版本号和 GitHub 地址
      produces:
      - application/json
      responses:
        "200":
          description: 获取欢迎信息成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Hello Ech0
      tags:
      - 通用功能
  /images/delete:
    delete:
      consumes:
      - application/json
      description: 用户删除已上传的图片，需传入图片 URL 和来源信息
      parameters:
      - description: 图片删除请求体
        in: body
        name: imageDto
        required: true
        schema:
          $ref: '#/definitions/model.ImageDto'
      produces:
      - application/json
      responses:
        "200":
          description: 删除失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 删除图片
      tags:
      - 通用功能
  /images/upload:
    post:
      consumes:
      - multipart/form-data
      description: 用户上传图片，成功后返回图片的访问 URL
      parameters:
      - description: 图片文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 上传图片
      tags:
      - 通用功能
  /login:
    post:
      consumes:
      - application/json
      description: 用户通过用户名和密码登录，返回 JWT Token
      parameters:
      - description: 登录请求体
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/model.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: 登录失败，返回错误信息
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 用户登录接口
      tags:
      - 用户认证
  /oauth2/settings:
    get:
      consumes:
      - application/json
      description: 获取系统的 OAuth2 相关设置
      produces:
      - application/json
      responses:
        "200":
          description: 获取 OAuth2 设置失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取 OAuth2 设置
      tags:
      - 系统设置
    put:
      consumes:
      - application/json
      description: 更新系统的 OAuth2 相关设置
      parameters:
      - description: 新的 OAuth 设置
        in: body
        name: oauthSettings
        required: true
        schema:
          $ref: '#/definitions/model.OAuth2SettingDto'
      produces:
      - application/json
      responses:
        "200":
          description: 更新 OAuth 设置失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 更新 OAuth2 设置
      tags:
      - 系统设置
  /oauth2/status:
    get:
      consumes:
      - application/json
      description: 获取系统的 OAuth2 启用状态
      produces:
      - application/json
      responses:
        "200":
          description: 获取 OAuth2 状态失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取 OAuth2 状态
      tags:
      - 系统设置
  /playmusic:
    get:
      consumes:
      - application/json
      description: 以流的方式播放当前可用的音乐文件
      produces:
      - audio/mpeg
      responses:
        "200":
          description: 播放失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 播放音乐
      tags:
      - 通用功能
  /register:
    post:
      consumes:
      - application/json
      description: 通过提交用户名、密码等信息完成注册
      parameters:
      - description: 注册请求体
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/model.RegisterDto'
      produces:
      - application/json
      responses:
        "200":
          description: 请求参数错误或注册失败，code=0，msg错误描述
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 用户注册
      tags:
      - 用户认证
  /rss:
    get:
      consumes:
      - application/json
      description: 获取系统的RSS订阅源（Atom格式），用于订阅最新动态
      produces:
      - application/rss+xml
      responses:
        "200":
          description: 获取RSS失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取RSS订阅源
      tags:
      - 通用功能
  /s3/presign:
    put:
      consumes:
      - application/json
      description: 获取用于上传文件到 S3 的预签名 URL
      parameters:
      - description: S3 预签名请求体
        in: body
        name: s3Dto
        required: true
        schema:
          $ref: '#/definitions/model.GetPresignURLDto'
      produces:
      - application/json
      responses:
        "200":
          description: 获取预签名 URL 失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取 S3 预签名 URL
      tags:
      - 通用功能
  /s3/settings:
    get:
      consumes:
      - application/json
      description: 获取系统的 S3 存储相关设置
      produces:
      - application/json
      responses:
        "200":
          description: 获取 S3 存储设置失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取 S3 存储设置
      tags:
      - 系统设置
    put:
      consumes:
      - application/json
      description: 更新系统的 S3 存储相关设置
      parameters:
      - description: 新的 S3 存储设置
        in: body
        name: s3Settings
        required: true
        schema:
          $ref: '#/definitions/model.S3SettingDto'
      produces:
      - application/json
      responses:
        "200":
          description: 更新 S3 存储设置失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 更新 S3 存储设置
      tags:
      - 系统设置
  /settings:
    get:
      consumes:
      - application/json
      description: 获取系统的全局设置
      produces:
      - application/json
      responses:
        "200":
          description: 获取设置失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取设置
      tags:
      - 系统设置
    put:
      consumes:
      - application/json
      description: 更新系统的全局设置
      parameters:
      - description: 新的系统设置
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/model.SystemSettingDto'
      produces:
      - application/json
      responses:
        "200":
          description: 更新设置失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 更新设置
      tags:
      - 系统设置
  /status:
    get:
      consumes:
      - application/json
      description: 查询系统当前运行状态及初始化安装状态
      produces:
      - application/json
      responses:
        "200":
          description: 获取状态失败或未初始化
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取 Echo 系统状态
      tags:
      - 通用功能
  /tag/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除指定的标签
      parameters:
      - description: 标签 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 删除标签
      tags:
      - Tag
  /tags:
    get:
      consumes:
      - application/json
      description: 获取所有标签及其使用次数
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取所有标签
      tags:
      - Tag
  /todo:
    get:
      consumes:
      - application/json
      description: 获取当前用户的所有待办事项
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取待办事项列表
      tags:
      - 待办事项
    post:
      consumes:
      - application/json
      description: 用户添加一条新的待办事项
      parameters:
      - description: 待办事项内容
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/model.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: 添加失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 添加新的待办事项
      tags:
      - 待办事项
  /todo/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除指定的待办事项
      parameters:
      - description: 待办事项ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 删除待办事项
      tags:
      - 待办事项
    put:
      consumes:
      - application/json
      description: 根据ID更新指定的待办事项
      parameters:
      - description: 待办事项ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 更新失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 更新待办事项
      tags:
      - 待办事项
  /user:
    get:
      consumes:
      - application/json
      description: 获取当前认证用户的详细信息，密码字段不会返回
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败，code=0，msg错误描述
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 接口会根据请求体更新用户相关字段，需携带有效的用户身份（如 JWT）
      parameters:
      - description: 用户更新信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInfoDto'
      produces:
      - application/json
      responses:
        "200":
          description: 请求参数错误或更新失败，code=0，msg错误描述
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新当前用户的信息
      tags:
      - 用户管理
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: 根据用户ID删除用户，调用者需具备相应权限
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 参数错误或删除失败，code=0，msg错误描述
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - 用户管理
  /user/admin/{id}:
    put:
      consumes:
      - application/json
      description: 通过用户ID更新其管理员权限，接口调用者需拥有相应权限
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 参数错误或更新失败，code=0，msg错误描述
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新用户权限（管理员权限）
      tags:
      - 用户管理
  /webhook:
    get:
      consumes:
      - application/json
      description: 获取系统中配置的所有 Webhook 列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取 Webhook 列表失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 获取所有 Webhook
      tags:
      - 系统设置
    post:
      consumes:
      - application/json
      description: 创建一个新的 Webhook 配置
      parameters:
      - description: 新的 Webhook 配置
        in: body
        name: webhook
        required: true
        schema:
          $ref: '#/definitions/model.WebhookDto'
      produces:
      - application/json
      responses:
        "200":
          description: 创建 Webhook 失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 创建新的 Webhook
      tags:
      - 系统设置
  /webhook/{id}:
    delete:
      consumes:
      - application/json
      description: 根据 ID 删除指定的 Webhook 配置
      parameters:
      - description: 要删除的 Webhook ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除 Webhook 失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 删除 Webhook
      tags:
      - 系统设置
    put:
      consumes:
      - application/json
      description: 根据 ID 更新指定的 Webhook 配置
      parameters:
      - description: 要更新的 Webhook ID
        in: path
        name: id
        required: true
        type: integer
      - description: 新的 Webhook 配置
        in: body
        name: webhook
        required: true
        schema:
          $ref: '#/definitions/model.WebhookDto'
      produces:
      - application/json
      responses:
        "200":
          description: 更新 Webhook 失败
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 更新 Webhook
      tags:
      - 系统设置
swagger: "2.0"
